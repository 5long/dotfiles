# Prototype
snippet pro
	${1:ClassName}.prototype.${2:methodName} = function(${3}) {
		${4:// body...}
	}
# Function
snippet fun
	function ${1:function_name}(${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2}
	}
# if
snippet if
	if (${1:true}) ${2}
# if ... else
snippet ife
	if (${1:true}) ${2}
	else ${3}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	}
# Object Method
snippet :f
	, ${1:method_name}: function(${2:attribute}) {
			${4}
		}
# setTimeout function
snippet tout
	setTimeout(function(${2}) {
		${3}
	}, ${1:10})
snippet clo
	(function(${1}) {
		${3://body}
	})(${2})
snippet ok
	ok(${1})
snippet eq
	equal(${1}, ${2})
snippet .
	this.${1}
snippet forin
	for (var ${1:i} in ${2}) {
		${3}
	}
snippet try
	try {
		${2}
	} catch (${1:e}) {
		${3}
	}
snippet rt
	.test("${1}", function(t, f) {
		${2}
	})
snippet insp
	console.log(sys.inspect(${1}))
snippet rq
	${3:$1} = require("${1:fs}")${2}
	${4}
snippet req
	${3:$2} = require("${1:events}").${2:EventEmitter}
	${4}
snippet log
	console.log(${1:"boooooooooo"})
