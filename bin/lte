#!/bin/ruby

# Dependencies:
#   - ModemManager
#     - mmcli
#   - systemd-networkd
#     - networkd service running & able to manage WWAN NICs
#     - networkctl

require 'fileutils'
require 'optparse'
require 'ostruct'
require 'json'

class Wwan
  attr_reader :args

  UNIT_FILE_PATH = '/run/systemd/network/wwan.network'
  SIMPLE_CONNECT='apn=3gnet'  # TODO: move this out to config file

  def self.create_default_args
    OpenStruct.new(
      modem: 0,
      bearer: 0,
      'simple-connect': SIMPLE_CONNECT,
      'unit-file': UNIT_FILE_PATH
    )
  end

  def bearer
    @bearer ||= load_bearer_state['bearer']
  end

  def load_bearer_state
    JSON.load(`mmcli -b #{args.bearer} -J`)
  end

  def initialize(args)
    @args = args
  end

  def gen_unit_file
    File.open args['unit-file'], 'w' do |f|
      f.write(unit_file_content)
    end
  end

  def remove_unit_file
    FileUtils.rm_f args['unit-file']
  end

  def unit_file_content
    interface = bearer['status']['interface']
    ipconf = bearer['ipv4-config']

    <<~EOF
    [Unit]
    Description=Generated by wwan script

    [Match]
    Name=#{interface}

    [Network]
    Address=#{ipconf['address']}/#{ipconf['prefix']}
    Gateway=#{ipconf['gateway']}
    EOF
  end

  def start
    connect
    gen_unit_file
    reload_networkd
  end

  def stop
    remove_unit_file
    reload_networkd
    disconnect
  end

  def disconnect
    system "mmcli -m #{args.modem} --simple-disconnect"
    system "mmcli -m #{args.modem} -d"
  end

  def connect
    system "mmcli -m #{args.modem} --simple-connect=#{args['simple-connect']}"
  end

  def reload_networkd
    system 'networkctl reload'
  end
end

COMMANDS = %w[
    start stop
    gen_unit_file remove_unit_file
    connect disconnect
]

def main
  op = OptionParser.new

  op.banner = "Usage: #{op.program_name} <#{COMMANDS.join('|')}>\n\n"
  define_argv_parsing(op)

  args = Wwan.create_default_args
  # OptionParser#load doesn't accept (into: {}), which makes it
  # less useful.
  #
  # op.load(into: args)
  op.parse!(into: args)

  cmd = ARGV.first
  if COMMANDS.include? cmd
    Wwan.new(args).send cmd
    exit 0
  elsif cmd == 'help'
    puts op.help
    exit 0
  else
    puts "Unknown command '#{cmd}'"
    exit 1
  end
end

def define_argv_parsing(op)
  op.on('--simple-connect', String, "Simple connect APN string")

  # Optional options
  op.on('-m', '--modem', Integer, "Modem index for mmcli -m. Defaults to 0")
  op.on('-b', '--bearer', Integer, "Bearer index for mmcli -b. Defaults to 0")
  op.on('--unit-file', String, "Path of temporary systemd.network unit file. Defaults to #{Wwan::UNIT_FILE_PATH}")
end

if $PROGRAM_NAME == __FILE__
  main
end
